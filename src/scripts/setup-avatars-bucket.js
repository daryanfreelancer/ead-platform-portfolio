// Script para configurar o bucket 'avatars' no Supabase
// Execute este script no console do navegador na p√°gina do Supabase Storage

const setupAvatarsBucket = async () => {
  console.log('üîß Configurando bucket avatars...')
  
  // Verificar se o bucket j√° existe
  const { data: buckets, error: listError } = await supabase.storage.listBuckets()
  
  if (listError) {
    console.error('‚ùå Erro ao listar buckets:', listError)
    return
  }
  
  const avatarsBucket = buckets.find(bucket => bucket.name === 'avatars')
  
  if (avatarsBucket) {
    console.log('‚úÖ Bucket avatars j√° existe')
  } else {
    console.log('üì¶ Criando bucket avatars...')
    
    // Criar bucket p√∫blico para avatars
    const { error: createError } = await supabase.storage.createBucket('avatars', {
      public: true,
      allowedMimeTypes: ['image/jpeg', 'image/png', 'image/webp'],
      fileSizeLimit: 5242880, // 5MB
    })
    
    if (createError) {
      console.error('‚ùå Erro ao criar bucket:', createError)
      return
    }
    
    console.log('‚úÖ Bucket avatars criado com sucesso')
  }
  
  // Configurar pol√≠tica RLS para avatars
  console.log('üîê Configurando pol√≠ticas RLS...')
  
  // Permitir upload para usu√°rios autenticados
  const uploadPolicy = `
    CREATE POLICY "Usu√°rios podem fazer upload de avatars" ON storage.objects 
    FOR INSERT WITH CHECK (
      bucket_id = 'avatars' AND 
      auth.uid()::text = (storage.foldername(name))[1]
    );
  `
  
  // Permitir visualiza√ß√£o p√∫blica
  const viewPolicy = `
    CREATE POLICY "Avatars s√£o p√∫blicos" ON storage.objects 
    FOR SELECT USING (bucket_id = 'avatars');
  `
  
  // Permitir atualiza√ß√£o para o pr√≥prio usu√°rio
  const updatePolicy = `
    CREATE POLICY "Usu√°rios podem atualizar seus avatars" ON storage.objects 
    FOR UPDATE USING (
      bucket_id = 'avatars' AND 
      auth.uid()::text = (storage.foldername(name))[1]
    );
  `
  
  // Permitir exclus√£o para o pr√≥prio usu√°rio
  const deletePolicy = `
    CREATE POLICY "Usu√°rios podem deletar seus avatars" ON storage.objects 
    FOR DELETE USING (
      bucket_id = 'avatars' AND 
      auth.uid()::text = (storage.foldername(name))[1]
    );
  `
  
  console.log('üìã Pol√≠ticas RLS a serem criadas:')
  console.log('1. Upload:', uploadPolicy)
  console.log('2. Visualiza√ß√£o:', viewPolicy)
  console.log('3. Atualiza√ß√£o:', updatePolicy)
  console.log('4. Exclus√£o:', deletePolicy)
  
  console.log('‚ö†Ô∏è  Execute essas pol√≠ticas no SQL Editor do Supabase')
  console.log('üéâ Configura√ß√£o do bucket avatars conclu√≠da!')
}

// Executar automaticamente se estiver no console
if (typeof window !== 'undefined' && window.supabase) {
  setupAvatarsBucket()
} else {
  console.log('‚ö†Ô∏è  Execute este script no console do navegador na p√°gina do Supabase')
}

export default setupAvatarsBucket